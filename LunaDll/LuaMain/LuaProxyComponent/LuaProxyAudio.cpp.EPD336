#include "LuaProxyAudio.h"

#include "../../SdlMusic/MusicManager.h"
#include "../../SdlMusic/SdlMusPlayer.h"
#include "../LuaProxy.h"
#include "../../Misc/MiscFuncs.h"
#include "../../GlobalFuncs.h"

#include "../../Level/Level.h"

void LuaProxy::Audio::MusicOpen(const char *filename)
{

}


void LuaProxy::Audio::MusicPlay()
{

}


void LuaProxy::Audio::MusicPlayFadeIn(int ms)
{

}


void LuaProxy::Audio::MusicStop()
{

}


void LuaProxy::Audio::MusicStopFadeOut(int ms)
{

}


void LuaProxy::Audio::MusicVolume(int vlm)
{

}


void LuaProxy::Audio::MusicPause()
{
    PGE_MusPlayer::MUS_pauseMusic();
}


void LuaProxy::Audio::MusicResume()
{
    PGE_MusPlayer::MUS_playMusic();
}


bool LuaProxy::Audio::MusicIsPlaying()
{
    PGE_MusPlayer::MUS_IsPlaying();
}


bool LuaProxy::Audio::MusicIsPaused()
{
    PGE_MusPlayer::MUS_IsPaused();
}


bool LuaProxy::Audio::MusicIsFading()
{
    PGE_MusPlayer::MUS_IsFading();
}




void LuaProxy::Audio::seizeStream(int section)
{

}

void LuaProxy::Audio::releaseStream(int section)
{

}








void LuaProxy::Audio::clearSFXBuffer()
{
    PGE_Sounds::clearSoundBuffer();
}


void LuaProxy::Audio::playSFX(const char *filename)
{
#ifndef NO_SDL
    std::string full_paths = getSfxPath(std::string(filename));
    PGE_Sounds::SND_PlaySnd(full_paths.c_str());
#else
    ::LuaProxy::playSFX(filename);
#endif
}


Mix_Chunk *LuaProxy::Audio::SfxOpen(const char *filename)
{
    std::string full_paths = getSfxPath(std::string(filename));
    return PGE_Sounds::SND_OpenSnd(full_paths.c_str());
}


int LuaProxy::Audio::SfxPlayCh(int channel, Mix_Chunk *chunk, int loops)
{
    return Mix_PlayChannel(channel, chunk, loops);
}


int LuaProxy::Audio::SfxPlayChTimed(int channel, Mix_Chunk *chunk, int loops, int ticks)
{
    return Mix_PlayChannelTimed(channel, chunk, loops, ticks);
}


int LuaProxy::Audio::SfxFadeInCh(int channel, Mix_Chunk *chunk, int loops, int ms)
{
    return Mix_FadeInChannel(channel, chunk, loops, ms);
}


int LuaProxy::Audio::SfxFadeInChTimed(int channel, Mix_Chunk *chunk, int loops, int ms, int ticks)
{

}


void LuaProxy::Audio::SfxPause(int channel)
{

}


void LuaProxy::Audio::SfxResume(int channel)
{

}


int LuaProxy::Audio::SfxStop(int channel)
{

}


int LuaProxy::Audio::SfxExpire(int channel, int ticks)
{

}


int LuaProxy::Audio::SfxFadeOut(int channel, int ms)
{

}


int LuaProxy::Audio::SfxIsPlaying(int channel)
{

}


int LuaProxy::Audio::SfxIsPaused(int channel)
{

}


string LuaProxy::Audio::getSfxPath(string filename)
{
    std::string full_paths;
    if(!isAbsolutePath(filename))
    {
        std::wstring world_dir = wstring((wchar_t*)GM_FULLDIR);
        std::wstring full_path = world_dir.append(Level::GetName());
        full_path = removeExtension(full_path);
        full_path = full_path.append(L"\\"); // < path into level folder
        full_paths = wstr2str(full_path) + filename;
    }
    else
    {
        full_paths = filename;
    }
    return full_paths;
}
